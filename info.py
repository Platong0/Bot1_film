#info.py

from external import async_log_function_call

from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram import Router, F
from aiogram.exceptions import TelegramBadRequest

from external import async_log_function_call
from wiki_utils import fetch_and_save_film_with_actors as fetch_and_save_film_from_wiki

router = Router()


@router.message(Command("start"))
@async_log_function_call
async def start(message: Message) -> None:
    await message.answer(
        f"–í—ñ—Ç–∞—é, {message.from_user.full_name}!\n"
        "–Ø –ø–µ—Ä—à–∏–π –±–æ—Ç Python —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞ user."
    )


@router.message(CommandStart())
@async_log_function_call
async def start(message: Message) -> None:
    await message.answer(
    "üëã –ü—Ä–∏–≤—ñ—Ç! –¶–µ –±–æ—Ç –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –±–∞–∑–æ—é —Ñ—ñ–ª—å–º—ñ–≤.\n\n"
    "–û—Å—å —â–æ —Ç–∏ –º–æ–∂–µ—à –∑—Ä–æ–±–∏—Ç–∏:\n"
    "üé¨ /films ‚Äî –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö —Ñ—ñ–ª—å–º—ñ–≤.\n"
    "üîé /search_movie ‚Äî –∑–Ω–∞–π—Ç–∏ —Ñ—ñ–ª—å–º –∑–∞ –Ω–∞–∑–≤–æ—é.\n"
    "‚öôÔ∏è /filter_movie ‚Äî –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å–º–∏ –∑–∞ –∂–∞–Ω—Ä–æ–º, —Ä–µ–π—Ç–∏–Ω–≥–æ–º —Ç–æ—â–æ.\n"
    "üé≤ /random ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π —Ñ—ñ–ª—å–º.\n"
    "üìö /wiki_film ‚Äî –¥–æ–¥–∞—Ç–∏ —Ñ—ñ–ª—å–º –∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó –∑–∞ –Ω–∞–∑–≤–æ—é.\n\n"
    "–ü—Ä–æ—Å—Ç–æ –Ω–∞–¥—ñ—à–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–æ–º–∞–Ω–¥—É –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –Ω–µ—ó –≤ –º–µ–Ω—é.\n"
    "–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ ‚Äî –∑–≤–µ—Ä—Ç–∞–π—Å—è!"
    )


# –û–±—Ä–æ–±–∫–∞ –±—É–¥—å-—è–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É (–∫—Ä—ñ–º –∫–æ–º–∞–Ω–¥)
@router.message()
@async_log_function_call
async def handle_film_name(message: Message) -> None:
    title = message.text.strip()

    if title.startswith("/"):  # –Ø–∫—â–æ —Ü–µ –∫–æ–º–∞–Ω–¥–∞ ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ
        return

    film_info = await fetch_and_save_film_from_wiki(title)

    if film_info is None:
        await message.answer("–§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –í—ñ–∫—ñ–ø–µ–¥—ñ—ó.")
        return

    poster_url = film_info.get("poster_url")
    actors = film_info.get("actors", "–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    caption = f"üé¨ –§—ñ–ª—å–º '{title}' –¥–æ–¥–∞–Ω–æ!\n–ê–∫—Ç–æ—Ä–∏: {actors}"

    if poster_url:
        try:
            await message.answer_photo(poster_url, caption=caption)
        except TelegramBadRequest:
            await message.answer(f"{caption}\n(‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è)")
    else:
        await message.answer(caption)

# –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø–µ–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
@router.message(F.reply_to_message, lambda m: m.reply_to_message.text == "–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É –∑ –í—ñ–∫—ñ–ø–µ–¥—ñ—ó:")
@async_log_function_call
async def handle_film_title(message: Message):
    title = message.text.strip()
    film_info = await fetch_and_save_film_from_wiki(title)

    if film_info is None:
        await message.answer("–§—ñ–ª—å–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É –í—ñ–∫—ñ–ø–µ–¥—ñ—ó.")
        return

    poster_url = film_info.get("poster_url")
    actors = film_info.get("actors", "–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    caption = f"üé¨ –§—ñ–ª—å–º '{title}' –¥–æ–¥–∞–Ω–æ!\n–ê–∫—Ç–æ—Ä–∏: {actors}"

    if poster_url:
        try:
            await message.answer_photo(poster_url, caption=caption)
        except TelegramBadRequest:
            await message.answer(f"{caption}\n(‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è)")
    else:
        await message.answer(caption)
